.alert.alert-info.alert-dismissible role="alert"
  button.close[type="button" data-dismiss="alert" aria-label="Close"]
    span[aria-hidden="true"]
      | &times;
  i.fa.fa-4x.pull-left aria-hidden="true"
  span
    | After choosing the master and clicking "Apply" all other nodes will be set to the minion role
h1 Nodes
.row
  .col-xs-12.discovery-control
    span #{Minion.count} Nodes found
    a.btn.btn-default[href="/nodes"] Refresh
= form_tag(nodes_path, method: "put")
.nodes-container
  table.table
    thead
      tr
        th
          | Id
        th.text-center
          | Status
        th
          | Hostname
        th
          | Role
        th
          | Highstate
        th.text-center
          | Master
    tbody
      - Minion.all.each do |m|
        tr
          th
            | #{m.id}
          td.text-center
            - if m.role
              i.fa.fa-check-circle-o.text-success.fa-2x aria-hidden="true"
            - else
              span.fa-stack aria-hidden="true"
                i.fa.fa-circle.fa-stack-2x.text-success aria-hidden="true"
                i.fa.fa-refresh.fa-stack-1x.fa-spin.fa-inverse aria-hidden="true"
          td
            | #{m.hostname}
          td
            | #{m.role}
          td
            | #{m.highstate}
          td.text-center
            - if m.role == "master"
              = radio_button_tag "roles[master]", m.id, true, disabled: true
            - elsif Minion.all.collect(&:role).include?("master")
              = radio_button_tag "roles[master]", m.id, false, disabled: true
            - else
              = radio_button_tag "roles[master]", m.id
  .clearfix.text-right.steps-container
    a.btn.btn-danger[href="/"] Back
    - if Minion.all.collect(&:role).include?("master")
      = submit_tag "Apply", class: "btn btn-primary", disabled: true
    - else
      = submit_tag "Apply", class: "btn btn-primary"

= link_to "Bootstrap cluster", bootstrap_nodes_path, method: :post, class: "btn btn-success btn-lg", id: "bootstrap-cluster"

script
  | MinionPoller.poll();
